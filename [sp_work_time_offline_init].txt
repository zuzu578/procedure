USE [03_TimeKeeper_YoungOne]
GO
/****** Object:  StoredProcedure [dbo].[sp_work_time_offline_init]    Script Date: 2021-03-09 오전 11:13:48 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Sanghyun
-- Create date: 2020.06.04
-- Modifier : Sanghyun
-- Modify date: 
-- Description:	
/*
EXEC sp_work_time_offline_init 2, 1198
*/
-- =============================================
ALTER PROCEDURE [dbo].[sp_work_time_offline_init]
	@user_no		INT,
	@computer_no	INT
AS
BEGIN
	IF(@computer_no IS NOT NULL)
	BEGIN
	-- 우선 순위 : 회사휴일 > 재택 > 간주 > 탄력 > 선택 > 시차 > 교대 > 표준근로

		-- 사용자 정보 조회
		DECLARE @dept_no	INT
		DECLARE @company_no	INT
		SELECT @dept_no = D.dept_no, @company_no = U.company_no
		FROM [dbo].[tb_dept] D WITH(NOLOCK)
		INNER JOIN [dbo].[tb_dept_user] DU WITH(NOLOCK)
		ON D.dept_no = DU.dept_no
		INNER JOIN [dbo].[tb_user] U WITH(NOLOCK)
		ON (DU.user_no = U.user_no AND U.retireYN = 'N')
		WHERE DU.user_no = @user_no
		
		--기간 설정
		DECLARE @weekday INT,
		@work_date		 DATE,
		@target_date	 DATE,
		@count			 INT,
		@offline_period  INT

		SET @count = 1
		SET @offline_period = (SELECT C.offline_period FROM [dbo].[tb_company] C WITH(NOLOCK) WHERE C.company_no = @company_no)
		SELECT @work_date = CONVERT(DATE, GETDATE())

		WHILE @count <= @offline_period
		BEGIN
			SELECT @target_date = DATEADD(DD, @count,@work_date)
			SELECT @weekday = DATEPART(DW,@target_date)

			-- 탄력근무제 그룹 조회
			DECLARE @flexible_work_group_no	INT
			SELECT TOP 1 @flexible_work_group_no = FWG.flexible_work_group_no
			FROM [dbo].[tb_flexible_work_group] FWG WITH(NOLOCK)
			INNER JOIN [dbo].[tb_flexible_work_group_member] FWGM WITH(NOLOCK)
			ON FWG.flexible_work_group_no = FWGM.flexible_work_group_no
			WHERE SYSDATETIME() BETWEEN FWG.start_date AND FWG.end_date
			AND (FWGM.user_no = @user_no OR FWGM.dept_no = @dept_no)
			ORDER BY FWGM.type DESC, FWGM.createdTime ASC

			-- 선택근무제 가능 날짜
			DECLARE @selective_mon_work_YN CHAR(1)
			DECLARE @selective_tue_work_YN CHAR(1)
			DECLARE @selective_wed_work_YN CHAR(1)
			DECLARE @selective_thu_work_YN CHAR(1)
			DECLARE @selective_fri_work_YN CHAR(1)
			DECLARE @selective_sat_work_YN CHAR(1)
			DECLARE @selective_sun_work_YN CHAR(1)
			SELECT @selective_mon_work_YN = selective_mon_work_YN, @selective_tue_work_YN = selective_tue_work_YN, @selective_wed_work_YN = selective_wed_work_YN
			, @selective_thu_work_YN = selective_thu_work_YN, @selective_fri_work_YN = selective_fri_work_YN, @selective_sat_work_YN = selective_sat_work_YN, @selective_sun_work_YN = selective_sun_work_YN
			FROM [dbo].[tb_company] WITH(NOLOCK)
			WHERE company_no = @company_no

			IF EXISTS(
				SELECT *
				FROM [dbo].[tb_work_time_offline] WITH(NOLOCK)
				WHERE user_no = @user_no
				AND computer_no = @computer_no
				AND work_date = @target_date
			)
				BEGIN
				--update
					-- Step 1-1 : 회사 휴일 조회
					IF EXISTS(
					SELECT *
					FROM [dbo].[tb_holiday] H WITH(NOLOCK)
					WHERE H.company_no = @company_no
					AND H.holiday = @target_date
					)
					BEGIN
					-- Step 1-2 : 회사 휴일 적용			
						UPDATE [dbo].[tb_work_time_offline] WITH(ROWLOCK)
						SET user_no = @user_no
						, computer_no = @computer_no
						, work_date = @target_date
						, start_time = '00:00:00'
						, end_time = '00:00:00'
						, work_time = 0
						, over_time = 0
						, empty_time = 0
						, work_type = 'holiday'
						, temp_use_count = (SELECT C.temp_use_count FROM [dbo].[tb_company] C WITH(NOLOCK) WHERE C.company_no = @company_no)
						WHERE user_no = @user_no
						AND computer_no = @computer_no
						AND work_date = @target_date
					END		

					IF EXISTS(
			
			SELECT * FROM [dbo].[tb_approval] A WITH(NOLOCK) 
			INNER JOIN [dbo].[tb_vacation] V WITH(NOLOCK) ON A.approval_no = V.approval_no
			INNER JOIN [dbo].[tb_vacation_type] VH WITH(NOLOCK) ON V.vacation_type_no = VH.vacation_type_no
                                                      
			WHERE VH.type in('90','91','92','93','94','95','96','97','98')  AND A.user_no =@user_no  AND CONVERT(DATE, GETDATE()) Between CONVERT(DATE,V.start_date) AND CONVERT(DATE,V.end_date)
			AND A.status = 'accept'
		)
		BEGIN
		IF(@weekday = 1)
			BEGIN
				INSERT INTO [dbo].[tb_work_time] WITH(ROWLOCK)
				(user_no, computer_no, work_date, start_time, end_time, work_time, over_time, empty_time, temp_use_count)	
				SELECT @user_no, @computer_no, CONVERT(DATE, GETDATE())
				, CASE WHEN C.sun_work_YN = 'Y' THEN C.work_start_time ELSE '00:00:00' END AS work_start_time	
				, CASE WHEN C.sun_work_YN = 'Y' THEN 

					
					CASE WHEN (SELECT count(*) FROM [dbo].[tb_approval] A WITH(NOLOCK) 
			INNER JOIN [dbo].[tb_vacation] V WITH(NOLOCK) ON A.approval_no = V.approval_no
			INNER JOIN [dbo].[tb_vacation_type] VH WITH(NOLOCK) ON V.vacation_type_no = VH.vacation_type_no
                                                      
			WHERE VH.type in('90','91','92','93','94','95','96','97','98')  AND A.user_no =@user_no  AND CONVERT(DATE, GETDATE()) Between CONVERT(DATE,V.start_date) AND CONVERT(DATE,V.end_date)
			AND A.status = 'accept') > 0 THEN
				   (SELECT TOP(1) V.end_time FROM [dbo].[tb_approval] A WITH(NOLOCK) 
			INNER JOIN [dbo].[tb_vacation] V WITH(NOLOCK) ON A.approval_no = V.approval_no
			INNER JOIN [dbo].[tb_vacation_type] VH WITH(NOLOCK) ON V.vacation_type_no = VH.vacation_type_no
                                                      
			WHERE VH.type in('90','91','92','93','94','95','96','97','98')  AND A.user_no =@user_no  AND CONVERT(DATE, GETDATE()) Between CONVERT(DATE,V.start_date) AND CONVERT(DATE,V.end_date)
			AND A.status = 'accept') ELSE  C.work_end_time END ELSE '00:00:00' END AS work_end_time	
				, 0, 0, 0
				, (SELECT C.temp_use_count FROM [dbo].[tb_company] C WITH(NOLOCK) WHERE C.company_no = U.company_no)
				FROM [dbo].[tb_user] U WITH(NOLOCK)
				INNER JOIN [dbo].[tb_company] C WITH(NOLOCK)
				ON U.company_no = C.company_no



				
				WHERE user_no = @user_no
				AND U.retireYN = 'N'
			END
			ELSE IF(@weekday = 2)
			BEGIN
					INSERT INTO [dbo].[tb_work_time] WITH(ROWLOCK)
				(user_no, computer_no, work_date, start_time, end_time, work_time, over_time, empty_time, temp_use_count)	
				SELECT @user_no, @computer_no, CONVERT(DATE, GETDATE())
				, CASE WHEN C.mon_work_YN = 'Y' THEN C.work_start_time ELSE '00:00:00' END AS work_start_time	
				, CASE WHEN C.mon_work_YN = 'Y' THEN 

					
					CASE WHEN (SELECT count(*) FROM [dbo].[tb_approval] A WITH(NOLOCK) 
			INNER JOIN [dbo].[tb_vacation] V WITH(NOLOCK) ON A.approval_no = V.approval_no
			INNER JOIN [dbo].[tb_vacation_type] VH WITH(NOLOCK) ON V.vacation_type_no = VH.vacation_type_no
                                                      
			WHERE VH.type in('90','91','92','93','94','95','96','97','98')  AND A.user_no =@user_no  AND CONVERT(DATE, GETDATE()) Between CONVERT(DATE,V.start_date) AND CONVERT(DATE,V.end_date)
			AND A.status = 'accept') > 0 THEN
				   (SELECT TOP(1) V.end_time FROM [dbo].[tb_approval] A WITH(NOLOCK) 
			INNER JOIN [dbo].[tb_vacation] V WITH(NOLOCK) ON A.approval_no = V.approval_no
			INNER JOIN [dbo].[tb_vacation_type] VH WITH(NOLOCK) ON V.vacation_type_no = VH.vacation_type_no
                                                      
			WHERE VH.type in('90','91','92','93','94','95','96','97','98')  AND A.user_no =@user_no  AND CONVERT(DATE, GETDATE()) Between CONVERT(DATE,V.start_date) AND CONVERT(DATE,V.end_date)
			AND A.status = 'accept') ELSE  C.work_end_time END ELSE '00:00:00' END AS work_end_time	
				, 0, 0, 0
				, (SELECT C.temp_use_count FROM [dbo].[tb_company] C WITH(NOLOCK) WHERE C.company_no = U.company_no)
				FROM [dbo].[tb_user] U WITH(NOLOCK)
				INNER JOIN [dbo].[tb_company] C WITH(NOLOCK)
				ON U.company_no = C.company_no



				
				WHERE user_no = @user_no
				AND U.retireYN = 'N'
			END
			ELSE IF(@weekday = 3)
			BEGIN
				INSERT INTO [dbo].[tb_work_time] WITH(ROWLOCK)
				(user_no, computer_no, work_date, start_time, end_time, work_time, over_time, empty_time, temp_use_count)	
				SELECT @user_no, @computer_no, CONVERT(DATE, GETDATE())
				, CASE WHEN C.tue_work_YN = 'Y' THEN C.work_start_time ELSE '00:00:00' END AS work_start_time	
				, CASE WHEN C.tue_work_YN = 'Y' THEN 

					
					CASE WHEN (SELECT count(*) FROM [dbo].[tb_approval] A WITH(NOLOCK) 
			INNER JOIN [dbo].[tb_vacation] V WITH(NOLOCK) ON A.approval_no = V.approval_no
			INNER JOIN [dbo].[tb_vacation_type] VH WITH(NOLOCK) ON V.vacation_type_no = VH.vacation_type_no
                                                      
			WHERE VH.type in('90','91','92','93','94','95','96','97','98')  AND A.user_no =@user_no  AND CONVERT(DATE, GETDATE()) Between CONVERT(DATE,V.start_date) AND CONVERT(DATE,V.end_date)
			AND A.status = 'accept') > 0 THEN
				   (SELECT TOP(1) V.end_time FROM [dbo].[tb_approval] A WITH(NOLOCK) 
			INNER JOIN [dbo].[tb_vacation] V WITH(NOLOCK) ON A.approval_no = V.approval_no
			INNER JOIN [dbo].[tb_vacation_type] VH WITH(NOLOCK) ON V.vacation_type_no = VH.vacation_type_no
                                                      
			WHERE VH.type in('90','91','92','93','94','95','96','97','98')  AND A.user_no =@user_no  AND CONVERT(DATE, GETDATE()) Between CONVERT(DATE,V.start_date) AND CONVERT(DATE,V.end_date)
			AND A.status = 'accept') ELSE  C.work_end_time END ELSE '00:00:00' END AS work_end_time	
				, 0, 0, 0
				, (SELECT C.temp_use_count FROM [dbo].[tb_company] C WITH(NOLOCK) WHERE C.company_no = U.company_no)
				FROM [dbo].[tb_user] U WITH(NOLOCK)
				INNER JOIN [dbo].[tb_company] C WITH(NOLOCK)
				ON U.company_no = C.company_no



				
				WHERE user_no = @user_no
				AND U.retireYN = 'N'
			END
			ELSE IF(@weekday = 4)
			BEGIN
				INSERT INTO [dbo].[tb_work_time] WITH(ROWLOCK)
				(user_no, computer_no, work_date, start_time, end_time, work_time, over_time, empty_time, temp_use_count)	
				SELECT @user_no, @computer_no, CONVERT(DATE, GETDATE())
				, CASE WHEN C.wed_work_YN = 'Y' THEN C.work_start_time ELSE '00:00:00' END AS work_start_time	
				, CASE WHEN C.wed_work_YN = 'Y' THEN 

					
					CASE WHEN (SELECT count(*) FROM [dbo].[tb_approval] A WITH(NOLOCK) 
			INNER JOIN [dbo].[tb_vacation] V WITH(NOLOCK) ON A.approval_no = V.approval_no
			INNER JOIN [dbo].[tb_vacation_type] VH WITH(NOLOCK) ON V.vacation_type_no = VH.vacation_type_no
                                                      
			WHERE VH.type in('90','91','92','93','94','95','96','97','98')  AND A.user_no =@user_no  AND CONVERT(DATE, GETDATE()) Between CONVERT(DATE,V.start_date) AND CONVERT(DATE,V.end_date)
			AND A.status = 'accept') > 0 THEN
				   (SELECT TOP(1) V.end_time FROM [dbo].[tb_approval] A WITH(NOLOCK) 
			INNER JOIN [dbo].[tb_vacation] V WITH(NOLOCK) ON A.approval_no = V.approval_no
			INNER JOIN [dbo].[tb_vacation_type] VH WITH(NOLOCK) ON V.vacation_type_no = VH.vacation_type_no
                                                      
			WHERE VH.type in('90','91','92','93','94','95','96','97','98')  AND A.user_no =@user_no  AND CONVERT(DATE, GETDATE()) Between CONVERT(DATE,V.start_date) AND CONVERT(DATE,V.end_date)
			AND A.status = 'accept') ELSE  C.work_end_time END ELSE '00:00:00' END AS work_end_time	
				, 0, 0, 0
				, (SELECT C.temp_use_count FROM [dbo].[tb_company] C WITH(NOLOCK) WHERE C.company_no = U.company_no)
				FROM [dbo].[tb_user] U WITH(NOLOCK)
				INNER JOIN [dbo].[tb_company] C WITH(NOLOCK)
				ON U.company_no = C.company_no



				
				WHERE user_no = @user_no
				AND U.retireYN = 'N'
			END
			ELSE IF(@weekday = 5)
			BEGIN
					INSERT INTO [dbo].[tb_work_time] WITH(ROWLOCK)
				(user_no, computer_no, work_date, start_time, end_time, work_time, over_time, empty_time, temp_use_count)	
				SELECT @user_no, @computer_no, CONVERT(DATE, GETDATE())
				, CASE WHEN C.thu_work_YN = 'Y' THEN C.work_start_time ELSE '00:00:00' END AS work_start_time	
				, CASE WHEN C.thu_work_YN = 'Y' THEN 

					
					CASE WHEN (SELECT count(*) FROM [dbo].[tb_approval] A WITH(NOLOCK) 
			INNER JOIN [dbo].[tb_vacation] V WITH(NOLOCK) ON A.approval_no = V.approval_no
			INNER JOIN [dbo].[tb_vacation_type] VH WITH(NOLOCK) ON V.vacation_type_no = VH.vacation_type_no
                                                      
			WHERE VH.type in('90','91','92','93','94','95','96','97','98')  AND A.user_no =@user_no  AND CONVERT(DATE, GETDATE()) Between CONVERT(DATE,V.start_date) AND CONVERT(DATE,V.end_date)
			AND A.status = 'accept') > 0 THEN
				   (SELECT TOP(1) V.end_time FROM [dbo].[tb_approval] A WITH(NOLOCK) 
			INNER JOIN [dbo].[tb_vacation] V WITH(NOLOCK) ON A.approval_no = V.approval_no
			INNER JOIN [dbo].[tb_vacation_type] VH WITH(NOLOCK) ON V.vacation_type_no = VH.vacation_type_no
                                                      
			WHERE VH.type in('90','91','92','93','94','95','96','97','98')  AND A.user_no =@user_no  AND CONVERT(DATE, GETDATE()) Between CONVERT(DATE,V.start_date) AND CONVERT(DATE,V.end_date)
			AND A.status = 'accept') ELSE  C.work_end_time END ELSE '00:00:00' END AS work_end_time	
				, 0, 0, 0
				, (SELECT C.temp_use_count FROM [dbo].[tb_company] C WITH(NOLOCK) WHERE C.company_no = U.company_no)
				FROM [dbo].[tb_user] U WITH(NOLOCK)
				INNER JOIN [dbo].[tb_company] C WITH(NOLOCK)
				ON U.company_no = C.company_no



				
				WHERE user_no = @user_no
				AND U.retireYN = 'N'
			END
			ELSE IF(@weekday = 6)
			BEGIN
					INSERT INTO [dbo].[tb_work_time] WITH(ROWLOCK)
				(user_no, computer_no, work_date, start_time, end_time, work_time, over_time, empty_time, temp_use_count)	
				SELECT @user_no, @computer_no, CONVERT(DATE, GETDATE())
				, CASE WHEN C.fri_work_YN = 'Y' THEN C.work_start_time ELSE '00:00:00' END AS work_start_time	
				, CASE WHEN C.fri_work_YN = 'Y' THEN 

					
					CASE WHEN (SELECT count(*) FROM [dbo].[tb_approval] A WITH(NOLOCK) 
			INNER JOIN [dbo].[tb_vacation] V WITH(NOLOCK) ON A.approval_no = V.approval_no
			INNER JOIN [dbo].[tb_vacation_type] VH WITH(NOLOCK) ON V.vacation_type_no = VH.vacation_type_no
                                                      
			WHERE VH.type in('90','91','92','93','94','95','96','97','98')  AND A.user_no =@user_no  AND CONVERT(DATE, GETDATE()) Between CONVERT(DATE,V.start_date) AND CONVERT(DATE,V.end_date)
			AND A.status = 'accept') > 0 THEN
				   (SELECT TOP(1) V.end_time FROM [dbo].[tb_approval] A WITH(NOLOCK) 
			INNER JOIN [dbo].[tb_vacation] V WITH(NOLOCK) ON A.approval_no = V.approval_no
			INNER JOIN [dbo].[tb_vacation_type] VH WITH(NOLOCK) ON V.vacation_type_no = VH.vacation_type_no
                                                      
			WHERE VH.type in('90','91','92','93','94','95','96','97','98')  AND A.user_no =@user_no  AND CONVERT(DATE, GETDATE()) Between CONVERT(DATE,V.start_date) AND CONVERT(DATE,V.end_date)
			AND A.status = 'accept') ELSE  C.work_end_time END ELSE '00:00:00' END AS work_end_time	
				, 0, 0, 0
				, (SELECT C.temp_use_count FROM [dbo].[tb_company] C WITH(NOLOCK) WHERE C.company_no = U.company_no)
				FROM [dbo].[tb_user] U WITH(NOLOCK)
				INNER JOIN [dbo].[tb_company] C WITH(NOLOCK)
				ON U.company_no = C.company_no



				
				WHERE user_no = @user_no
				AND U.retireYN = 'N'
			END
			ELSE IF(@weekday = 7)
			BEGIN
					INSERT INTO [dbo].[tb_work_time] WITH(ROWLOCK)
				(user_no, computer_no, work_date, start_time, end_time, work_time, over_time, empty_time, temp_use_count)	
				SELECT @user_no, @computer_no, CONVERT(DATE, GETDATE())
				, CASE WHEN C.sat_work_YN = 'Y' THEN C.work_start_time ELSE '00:00:00' END AS work_start_time	
				, CASE WHEN C.sat_work_YN = 'Y' THEN 

					
					CASE WHEN (SELECT count(*) FROM [dbo].[tb_approval] A WITH(NOLOCK) 
			INNER JOIN [dbo].[tb_vacation] V WITH(NOLOCK) ON A.approval_no = V.approval_no
			INNER JOIN [dbo].[tb_vacation_type] VH WITH(NOLOCK) ON V.vacation_type_no = VH.vacation_type_no
                                                      
			WHERE VH.type in('90','91','92','93','94','95','96','97','98')  AND A.user_no =@user_no  AND CONVERT(DATE, GETDATE()) Between CONVERT(DATE,V.start_date) AND CONVERT(DATE,V.end_date)
			AND A.status = 'accept') > 0 THEN
				   (SELECT TOP(1) V.end_time FROM [dbo].[tb_approval] A WITH(NOLOCK) 
			INNER JOIN [dbo].[tb_vacation] V WITH(NOLOCK) ON A.approval_no = V.approval_no
			INNER JOIN [dbo].[tb_vacation_type] VH WITH(NOLOCK) ON V.vacation_type_no = VH.vacation_type_no
                                                      
			WHERE VH.type in('90','91','92','93','94','95','96','97','98')  AND A.user_no =@user_no  AND CONVERT(DATE, GETDATE()) Between CONVERT(DATE,V.start_date) AND CONVERT(DATE,V.end_date)
			AND A.status = 'accept') ELSE  C.work_end_time END ELSE '00:00:00' END AS work_end_time	
				, 0, 0, 0
				, (SELECT C.temp_use_count FROM [dbo].[tb_company] C WITH(NOLOCK) WHERE C.company_no = U.company_no)
				FROM [dbo].[tb_user] U WITH(NOLOCK)
				INNER JOIN [dbo].[tb_company] C WITH(NOLOCK)
				ON U.company_no = C.company_no



				
				WHERE user_no = @user_no
				AND U.retireYN = 'N'
			END
		END

					-- Step 3-1 : 재택근무제 확인
					ELSE IF EXISTS(		
						SELECT *
						FROM [dbo].[tb_telecommuting] TC WITH(NOLOCK)
						WHERE TC.user_no = @user_no
						AND TC.work_date = @target_date				
					)
					BEGIN
						-- Step 3-2 : 재택근무제 적용

						UPDATE [dbo].[tb_work_time_offline] WITH(ROWLOCK)
						SET user_no = @user_no
						, computer_no = @computer_no
						, work_date = @target_date
						, start_time = '00:00:00'
						, end_time = '23:59:59'
						, work_time = 0
						, over_time = 0
						, empty_time = 0
						, work_type = 'telecommuting'
						, temp_use_count = (SELECT C.temp_use_count FROM [dbo].[tb_company] C WITH(NOLOCK) WHERE C.company_no = @company_no)
						WHERE user_no = @user_no
						AND computer_no = @computer_no
						AND work_date = @target_date
					END	

					-- Step 4-1 : 간주근로제 확인
					ELSE IF EXISTS(		
						SELECT *
						FROM [dbo].[tb_regard] R WITH(NOLOCK)
						WHERE R.user_no = @user_no
						AND R.work_date = @target_date				
					)
					BEGIN
						-- Step 4-2 : 간주근로제 적용
						UPDATE [dbo].[tb_work_time_offline] WITH(ROWLOCK)
						SET user_no = @user_no
						, computer_no = @computer_no
						, work_date = @target_date
						, start_time = '00:00:00'
						, end_time = '23:59:59'
						, work_time = 0
						, over_time = 0
						, empty_time = 0
						, work_type = 'regard'
						, temp_use_count = (SELECT C.temp_use_count FROM [dbo].[tb_company] C WITH(NOLOCK) WHERE C.company_no = @company_no)
						WHERE user_no = @user_no
						AND computer_no = @computer_no	
						AND work_date = @target_date
					END	

					-- Step 3-1 : 탄력근무제 확인	
					ELSE IF (@flexible_work_group_no IS NOT NULL)
					BEGIN
						-- Step 3-2 : 탄력근무제 적용
						UPDATE [dbo].[tb_work_time_offline] WITH(ROWLOCK)
						SET user_no = @user_no
						, computer_no = @computer_no
						--, work_date = @target_date
						, work_date = (SELECT FWGS.work_date FROM [dbo].[tb_flexible_work_group] FWG WITH(NOLOCK) INNER JOIN [dbo].[tb_flexible_work_group_schedule] FWGS WITH(NOLOCK) ON FWG.flexible_work_group_no = FWGS.flexible_work_group_no WHERE FWG.flexible_work_group_no = @flexible_work_group_no AND CONVERT(DATE, FWGS.work_date) = @target_date)
						, start_time = (SELECT FWGS.start_date FROM [dbo].[tb_flexible_work_group] FWG WITH(NOLOCK) INNER JOIN [dbo].[tb_flexible_work_group_schedule] FWGS WITH(NOLOCK) ON FWG.flexible_work_group_no = FWGS.flexible_work_group_no WHERE FWG.flexible_work_group_no = @flexible_work_group_no AND CONVERT(DATE, FWGS.work_date) = @target_date)
						, end_time = (SELECT FWGS.end_date FROM [dbo].[tb_flexible_work_group] FWG WITH(NOLOCK) INNER JOIN [dbo].[tb_flexible_work_group_schedule] FWGS WITH(NOLOCK) ON FWG.flexible_work_group_no = FWGS.flexible_work_group_no WHERE FWG.flexible_work_group_no = @flexible_work_group_no AND CONVERT(DATE, FWGS.work_date) = @target_date)
						, work_time = 0
						, over_time = 0
						, empty_time = 0
						, work_type = 'flexible'
						, flexible_work_start_date = (SELECT FWGS.work_date FROM [dbo].[tb_flexible_work_group] FWG WITH(NOLOCK) INNER JOIN [dbo].[tb_flexible_work_group_schedule] FWGS WITH(NOLOCK) ON FWG.flexible_work_group_no = FWGS.flexible_work_group_no WHERE FWG.flexible_work_group_no = @flexible_work_group_no AND CONVERT(DATE, FWGS.work_date) = @target_date)
						, flexible_work_max_week_time_min = (SELECT FWGS.max_week_work_time_min FROM [dbo].[tb_flexible_work_group] FWG WITH(NOLOCK) INNER JOIN [dbo].[tb_flexible_work_group_schedule] FWGS WITH(NOLOCK) ON FWG.flexible_work_group_no = FWGS.flexible_work_group_no WHERE FWG.flexible_work_group_no = @flexible_work_group_no AND CONVERT(DATE, FWGS.work_date) = @target_date)
						, flexible_work_over_time_hour_week = (SELECT FWG.week_over_time_hour FROM [dbo].[tb_flexible_work_group] FWG WITH(NOLOCK) INNER JOIN [dbo].[tb_flexible_work_group_schedule] FWGS WITH(NOLOCK) ON FWG.flexible_work_group_no = FWGS.flexible_work_group_no WHERE FWG.flexible_work_group_no = @flexible_work_group_no AND CONVERT(DATE, FWGS.work_date) = @target_date)
						, temp_use_count = (SELECT C.temp_use_count FROM [dbo].[tb_company] C WITH(NOLOCK) WHERE C.company_no = @company_no)
						WHERE user_no = @user_no
						AND computer_no = @computer_no
						AND work_date = @target_date
					END
					-- Step 4-1 : 선택근무제 확인
					ELSE IF EXISTS (
						SELECT *
						FROM [dbo].[tb_selective_work_schedule] SWS WITH(NOLOCK)
						WHERE user_no = @user_no
						AND CONVERT(DATE, SWS.work_date) = @target_date
						AND ((@weekday = 1 AND @selective_sun_work_YN = 'Y')
							OR (@weekday = 2 AND @selective_mon_work_YN = 'Y'
							OR (@weekday = 3 AND @selective_tue_work_YN = 'Y')
							OR (@weekday = 4 AND @selective_wed_work_YN = 'Y')
							OR (@weekday = 5 AND @selective_thu_work_YN = 'Y')
							OR (@weekday = 6 AND @selective_fri_work_YN = 'Y')
							OR (@weekday = 7 AND @selective_sat_work_YN = 'Y')))
					)
					BEGIN
						-- Step 4-2 : 선택근무제 적용
						UPDATE [dbo].[tb_work_time_offline] WITH(ROWLOCK)
						SET user_no = @user_no
						, computer_no = @computer_no
						, work_date = @target_date
						, start_time = '00:00:00'
						, end_time = '00:00:00'
						, work_time = 0
						, over_time = 0
						, empty_time = 0
						, work_type = 'selective'
						, possible_work_time_min_in_today = (SELECT TOP 1 SWS.work_time_min FROM [dbo].[tb_selective_work_schedule] SWS WITH(NOLOCK) WHERE user_no = @user_no AND CONVERT(DATE, SWS.work_date) = @target_date ORDER BY SWS.updatedTime DESC)
						, temp_use_count = (SELECT C.temp_use_count FROM [dbo].[tb_company] C WITH(NOLOCK) WHERE C.company_no = @company_no)
						WHERE user_no = @user_no
						AND computer_no = @computer_no
						AND work_date = @target_date
					END
					-- Step 5-1 : 시차출퇴근제 확인
					ELSE IF EXISTS(
						SELECT *
						FROM [dbo].[tb_schedule] S WITH(NOLOCK)
						WHERE S.user_no = @user_no
						AND S.work_date = @target_date
					)
					BEGIN
						-- Step 5-2 : 시차출퇴근제 적용
						UPDATE [dbo].[tb_work_time_offline] WITH(ROWLOCK)
						SET user_no = @user_no
						, computer_no = @computer_no
						, work_date = @target_date
						, start_time = (SELECT TOP 1 S.start_time FROM [dbo].[tb_schedule] S WITH(NOLOCK) WHERE S.user_no = @user_no AND S.work_date = @target_date)
						, end_time = (SELECT TOP 1 S.end_time FROM [dbo].[tb_schedule] S WITH(NOLOCK) WHERE S.user_no = @user_no AND S.work_date = @target_date)
						, rest_start_time = (SELECT TOP 1 ISNULL(S.rest_start_time, (SELECT C.lunch_start_time FROM [dbo].[tb_company] C WITH(NOLOCK) WHERE C.company_no = @company_no)) FROM [dbo].[tb_schedule] S WITH(NOLOCK) WHERE S.user_no = @user_no AND S.work_date = @target_date)
						, rest_end_time = (SELECT TOP 1 ISNULL(S.rest_end_time, (SELECT C.lunch_end_time FROM [dbo].[tb_company] C WITH(NOLOCK) WHERE C.company_no = @company_no)) FROM [dbo].[tb_schedule] S WITH(NOLOCK) WHERE S.user_no = @user_no AND S.work_date = @target_date)
						, work_time = 0
						, over_time = 0
						, empty_time = 0
						, work_type = 'schedule'
						, temp_use_count = (SELECT C.temp_use_count FROM [dbo].[tb_company] C WITH(NOLOCK) WHERE C.company_no = @company_no)
						WHERE user_no = @user_no
						AND computer_no = @computer_no
						AND work_date = @target_date
					END	
					-- Step 6-1 : 교대근무제 확인
					ELSE IF EXISTS(
						SELECT *
						FROM [dbo].[tb_shift_work] SW WITH(NOLOCK)
						WHERE SW.user_no = @user_no
						AND SW.work_date = @target_date
					)
					BEGIN
						-- Step 6-2 :  교대근무제 적용
						UPDATE [dbo].[tb_work_time_offline] WITH(ROWLOCK)
						SET user_no = @user_no
						, computer_no = @computer_no
						, work_date = @target_date
						, start_time = (SELECT TOP 1 SW.work_start_time FROM [dbo].[tb_shift_work] SW WITH(NOLOCK) WHERE SW.user_no = @user_no AND SW.work_date = @target_date ORDER BY SW.createdTime DESC)
						, end_time = (SELECT TOP 1 SW.work_end_time FROM [dbo].[tb_shift_work] SW WITH(NOLOCK) WHERE SW.user_no = @user_no AND SW.work_date = @target_date ORDER BY SW.createdTime DESC)
						, rest_start_time = (SELECT TOP 1 SW.rest_start_time FROM [dbo].[tb_shift_work] SW WITH(NOLOCK) WHERE SW.user_no = @user_no AND SW.work_date = @target_date ORDER BY SW.createdTime DESC)
						, rest_end_time = (SELECT TOP 1 SW.rest_end_time FROM [dbo].[tb_shift_work] SW WITH(NOLOCK) WHERE SW.user_no = @user_no AND SW.work_date = @target_date ORDER BY SW.createdTime DESC)
						, work_time = 0
						, over_time = 0
						, empty_time = 0
						, work_type = 'shift'
						, shift_overnight_workYN = (SELECT TOP 1 SW.overnight_work_YN FROM [dbo].[tb_shift_work] SW WITH(NOLOCK) WHERE SW.user_no = @user_no AND SW.work_date = @target_date ORDER BY SW.createdTime DESC)
						, temp_use_count = (SELECT C.temp_use_count FROM [dbo].[tb_company] C WITH(NOLOCK) WHERE C.company_no = @company_no)
						WHERE user_no = @user_no
						AND computer_no = @computer_no
						AND work_date = @target_date
					END
					ELSE
					BEGIN
						-- Step 7 : 표준근로 설정
						IF(@weekday = 1)
						BEGIN
							UPDATE [dbo].[tb_work_time_offline] WITH(ROWLOCK)
							SET user_no = @user_no
						, computer_no = @computer_no
						, work_date = @target_date
						, start_time = (SELECT CASE WHEN C.sun_work_YN = 'Y' THEN C.work_start_time ELSE '00:00:00' END AS work_start_time FROM [dbo].[tb_company] C WITH(NOLOCK) WHERE C.company_no = @company_no)
						, end_time = (SELECT CASE WHEN C.sun_work_YN = 'Y' THEN C.work_end_time ELSE '00:00:00' END AS work_end_time FROM [dbo].[tb_company] C WITH(NOLOCK) WHERE C.company_no = @company_no)
						, work_time = 0
						, over_time = 0
						, empty_time = 0
						, temp_use_count = (SELECT C.temp_use_count FROM [dbo].[tb_company] C WITH(NOLOCK) WHERE C.company_no = @company_no)
						WHERE user_no = @user_no
						AND computer_no = @computer_no
						AND work_date = @target_date
						END
						ELSE IF(@weekday = 2)
						BEGIN
							UPDATE [dbo].[tb_work_time_offline] WITH(ROWLOCK)
							SET user_no = @user_no
						, computer_no = @computer_no
						, work_date = @target_date
						, start_time = (SELECT CASE WHEN C.mon_work_YN = 'Y' THEN C.work_start_time ELSE '00:00:00' END AS work_start_time FROM [dbo].[tb_company] C WITH(NOLOCK) WHERE C.company_no = @company_no)
						, end_time = (SELECT CASE WHEN C.mon_work_YN = 'Y' THEN C.work_end_time ELSE '00:00:00' END AS work_end_time FROM [dbo].[tb_company] C WITH(NOLOCK) WHERE C.company_no = @company_no)
						, work_time = 0
						, over_time = 0
						, empty_time = 0
						, temp_use_count = (SELECT C.temp_use_count FROM [dbo].[tb_company] C WITH(NOLOCK) WHERE C.company_no = @company_no)
						WHERE user_no = @user_no
						AND computer_no = @computer_no
						AND work_date = @target_date
						END
						ELSE IF(@weekday = 3)
						BEGIN
							UPDATE [dbo].[tb_work_time_offline] WITH(ROWLOCK)
							SET user_no = @user_no
						, computer_no = @computer_no
						, work_date = @target_date
						, start_time = (SELECT CASE WHEN C.tue_work_YN = 'Y' THEN C.work_start_time ELSE '00:00:00' END AS work_start_time FROM [dbo].[tb_company] C WITH(NOLOCK) WHERE C.company_no = @company_no)
						, end_time = (SELECT CASE WHEN C.tue_work_YN = 'Y' THEN C.work_end_time ELSE '00:00:00' END AS work_end_time FROM [dbo].[tb_company] C WITH(NOLOCK) WHERE C.company_no = @company_no)
						, work_time = 0
						, over_time = 0
						, empty_time = 0
						, temp_use_count = (SELECT C.temp_use_count FROM [dbo].[tb_company] C WITH(NOLOCK) WHERE C.company_no = @company_no)
						WHERE user_no = @user_no
						AND computer_no = @computer_no
						AND work_date = @target_date
						END
						ELSE IF(@weekday = 4)
						BEGIN
							UPDATE [dbo].[tb_work_time_offline] WITH(ROWLOCK)
							SET user_no = @user_no
						, computer_no = @computer_no
						, work_date = @target_date
						, start_time = (SELECT CASE WHEN C.wed_work_YN = 'Y' THEN C.work_start_time ELSE '00:00:00' END AS work_start_time FROM [dbo].[tb_company] C WITH(NOLOCK) WHERE C.company_no = @company_no)
						, end_time = (SELECT CASE WHEN C.wed_work_YN = 'Y' THEN C.work_end_time ELSE '00:00:00' END AS work_end_time FROM [dbo].[tb_company] C WITH(NOLOCK) WHERE C.company_no = @company_no)
						, work_time = 0
						, over_time = 0
						, empty_time = 0
						, temp_use_count = (SELECT C.temp_use_count FROM [dbo].[tb_company] C WITH(NOLOCK) WHERE C.company_no = @company_no)
						WHERE user_no = @user_no
						AND computer_no = @computer_no
						AND work_date = @target_date
						END
						ELSE IF(@weekday = 5)
						BEGIN
							UPDATE [dbo].[tb_work_time_offline] WITH(ROWLOCK)
							SET user_no = @user_no
						, computer_no = @computer_no
						, work_date = @target_date
						, start_time = (SELECT CASE WHEN C.thu_work_YN = 'Y' THEN C.work_start_time ELSE '00:00:00' END AS work_start_time FROM [dbo].[tb_company] C WITH(NOLOCK) WHERE C.company_no = @company_no)
						, end_time = (SELECT CASE WHEN C.thu_work_YN = 'Y' THEN C.work_end_time ELSE '00:00:00' END AS work_end_time FROM [dbo].[tb_company] C WITH(NOLOCK) WHERE C.company_no = @company_no)
						, work_time = 0
						, over_time = 0
						, empty_time = 0
						, temp_use_count = (SELECT C.temp_use_count FROM [dbo].[tb_company] C WITH(NOLOCK) WHERE C.company_no = @company_no)
						WHERE user_no = @user_no
						AND computer_no = @computer_no
						AND work_date = @target_date
						END
						ELSE IF(@weekday = 6)
						BEGIN
							UPDATE [dbo].[tb_work_time_offline] WITH(ROWLOCK)
							SET user_no = @user_no
						, computer_no = @computer_no
						, work_date = @target_date
						, start_time = (SELECT CASE WHEN C.fri_work_YN = 'Y' THEN C.work_start_time ELSE '00:00:00' END AS work_start_time FROM [dbo].[tb_company] C WITH(NOLOCK) WHERE C.company_no = @company_no)
						, end_time = (SELECT CASE WHEN C.fri_work_YN = 'Y' THEN C.work_end_time ELSE '00:00:00' END AS work_end_time FROM [dbo].[tb_company] C WITH(NOLOCK) WHERE C.company_no = @company_no)
						, work_time = 0
						, over_time = 0
						, empty_time = 0
						, temp_use_count = (SELECT C.temp_use_count FROM [dbo].[tb_company] C WITH(NOLOCK) WHERE C.company_no = @company_no)
						WHERE user_no = @user_no
						AND computer_no = @computer_no
						AND work_date = @target_date
						END
						ELSE IF(@weekday = 7)
						BEGIN
							UPDATE [dbo].[tb_work_time_offline] WITH(ROWLOCK)
							SET user_no = @user_no
						, computer_no = @computer_no
						, work_date = @target_date
						, start_time = (SELECT CASE WHEN C.sat_work_YN = 'Y' THEN C.work_start_time ELSE '00:00:00' END AS work_start_time FROM [dbo].[tb_company] C WITH(NOLOCK) WHERE C.company_no = @company_no)
						, end_time = (SELECT CASE WHEN C.sat_work_YN = 'Y' THEN C.work_end_time ELSE '00:00:00' END AS work_end_time FROM [dbo].[tb_company] C WITH(NOLOCK) WHERE C.company_no = @company_no)
						, work_time = 0
						, over_time = 0
						, empty_time = 0
						, temp_use_count = (SELECT C.temp_use_count FROM [dbo].[tb_company] C WITH(NOLOCK) WHERE C.company_no = @company_no)
						WHERE user_no = @user_no
						AND computer_no = @computer_no
						AND work_date = @target_date
						END
					END
				END
				ELSE 
				BEGIN
				--insert
					-- Step 1-1 : 회사 휴일 조회
					IF EXISTS(
					SELECT *
					FROM [dbo].[tb_holiday] H WITH(NOLOCK)
					WHERE H.company_no = @company_no
					AND H.holiday = @target_date
				)
				BEGIN
					-- Step 1-2 : 회사 휴일 적용			
						INSERT INTO [dbo].[tb_work_time_offline] WITH(ROWLOCK)
						(user_no, computer_no, work_date, start_time, end_time, work_time, over_time, empty_time, work_type, temp_use_count)	
						SELECT @user_no, @computer_no, @target_date, '00:00:00', '00:00:00', 0, 0, 0, 'holiday'
						, (SELECT C.temp_use_count FROM [dbo].[tb_company] C WITH(NOLOCK) WHERE C.company_no = U.company_no)
						FROM [dbo].[tb_user] U WITH(NOLOCK)
						WHERE user_no = @user_no
						AND U.retireYN = 'N'			
				END		
				-- Step 3-1 : 재택근무제 확인
				ELSE IF EXISTS(		
					SELECT *
					FROM [dbo].[tb_telecommuting] TC WITH(NOLOCK)
					WHERE TC.user_no = @user_no
					AND TC.work_date = @target_date				
				)
				BEGIN
					-- Step 3-2 : 재택근무제 적용

					INSERT INTO [dbo].[tb_work_time_offline] WITH(ROWLOCK)
					(user_no, computer_no, work_date, start_time, end_time, work_time, over_time, empty_time, work_type,  temp_use_count)	
					SELECT TOP 1 @user_no, @computer_no, @target_date, '00:00:00', '23:59:59', 0, 0, 0, 'telecommuting'
					, (SELECT TOP 1 C.temp_use_count FROM [dbo].[tb_company] C WITH(NOLOCK) WHERE C.company_no = @company_no)
					FROM [dbo].[tb_telecommuting] TC WITH(NOLOCK)
					WHERE TC.user_no = @user_no
					AND TC.work_date = @target_date
					ORDER BY TC.createdTime DESC

				END	

				-- Step 4-1 : 간주근로제 확인
				ELSE IF EXISTS(		
					SELECT *
					FROM [dbo].[tb_regard] R WITH(NOLOCK)
					WHERE R.user_no = @user_no
					AND R.work_date = @target_date				
				)
				BEGIN
					-- Step 4-2 : 간주근로제 적용
					INSERT INTO [dbo].[tb_work_time_offline] WITH(ROWLOCK)
					(user_no, computer_no, work_date, start_time, end_time, work_time, over_time, empty_time, work_type,  temp_use_count)	
					SELECT TOP 1 @user_no, @computer_no, @target_date, '00:00:00', '23:59:59', 0, 0, 0, 'regard'
					, (SELECT TOP 1 C.temp_use_count FROM [dbo].[tb_company] C WITH(NOLOCK) WHERE C.company_no = @company_no)
					FROM [dbo].[tb_regard] R WITH(NOLOCK)
					WHERE R.user_no = @user_no
					AND R.work_date = @target_date
					ORDER BY R.createdTime DESC
				END	

				-- Step 3-1 : 탄력근무제 확인	
				ELSE IF (@flexible_work_group_no IS NOT NULL)
				BEGIN
					-- Step 3-2 : 탄력근무제 적용
					INSERT INTO [dbo].[tb_work_time_offline] WITH(ROWLOCK)
					(user_no, computer_no, work_date, start_time, end_time, work_time, over_time, empty_time, work_type, flexible_work_start_date, flexible_work_max_week_time_min, flexible_work_over_time_hour_week, temp_use_count)			
					SELECT @user_no, @computer_no, FWGS.work_date, FWGS.start_date, FWGS.end_date, 0, 0, 0, 'flexible', FWGS.work_date, FWGS.max_week_work_time_min, FWG.week_over_time_hour
					, (SELECT C.temp_use_count FROM [dbo].[tb_company] C WITH(NOLOCK) WHERE C.company_no = @company_no)		
					FROM [dbo].[tb_flexible_work_group] FWG WITH(NOLOCK)
					INNER JOIN [dbo].[tb_flexible_work_group_schedule] FWGS WITH(NOLOCK)
					ON FWG.flexible_work_group_no = FWGS.flexible_work_group_no
					WHERE FWG.flexible_work_group_no = @flexible_work_group_no
					AND CONVERT(DATE, FWGS.work_date) = @target_date
				END
				-- Step 4-1 : 선택근무제 확인
				ELSE IF EXISTS (
					SELECT *
					FROM [dbo].[tb_selective_work_schedule] SWS WITH(NOLOCK)
					WHERE user_no = @user_no
					AND CONVERT(DATE, SWS.work_date) = @target_date
					AND ((@weekday = 1 AND @selective_sun_work_YN = 'Y')
						OR (@weekday = 2 AND @selective_mon_work_YN = 'Y'
						OR (@weekday = 3 AND @selective_tue_work_YN = 'Y')
						OR (@weekday = 4 AND @selective_wed_work_YN = 'Y')
						OR (@weekday = 5 AND @selective_thu_work_YN = 'Y')
						OR (@weekday = 6 AND @selective_fri_work_YN = 'Y')
						OR (@weekday = 7 AND @selective_sat_work_YN = 'Y')))
				)
				BEGIN
					-- Step 4-2 : 선택근무제 적용
					INSERT INTO [dbo].[tb_work_time_offline] WITH(ROWLOCK)
					(user_no, computer_no, work_date, start_time, end_time, work_time, over_time, empty_time, work_type, possible_work_time_min_in_today, temp_use_count)			
					--SELECT TOP 1 @user_no, @computer_no, SWS.work_date, SWS.start_date, SWS.end_date, 0, 0, 0, 'selective', SWS.work_time_min
					SELECT TOP 1 @user_no, @computer_no, SWS.work_date, '00:00:00', '00:00:00', 0, 0, 0, 'selective', SWS.work_time_min
					, (SELECT C.temp_use_count FROM [dbo].[tb_company] C WITH(NOLOCK) WHERE C.company_no = @company_no)		
					FROM [dbo].[tb_selective_work_schedule] SWS WITH(NOLOCK)
					WHERE user_no = @user_no
					AND CONVERT(DATE, SWS.work_date) = @target_date
					ORDER BY SWS.updatedTime DESC
				END
				-- Step 5-1 : 시차출퇴근제 확인
				ELSE IF EXISTS(
					SELECT *
					FROM [dbo].[tb_schedule] S WITH(NOLOCK)
					WHERE S.user_no = @user_no
					AND S.work_date = @target_date
				)
				BEGIN
					-- Step 5-2 : 시차출퇴근제 적용
					INSERT INTO [dbo].[tb_work_time_offline] WITH(ROWLOCK)
					(user_no, computer_no, work_date, start_time, end_time, rest_start_time, rest_end_time, work_time, over_time, empty_time, work_type, temp_use_count)	
					SELECT TOP 1 @user_no, @computer_no, S.work_date, S.start_time, S.end_time
					, ISNULL(S.rest_start_time, (SELECT C.lunch_start_time FROM [dbo].[tb_company] C WITH(NOLOCK) WHERE C.company_no = @company_no))
					, ISNULL(S.rest_end_time, (SELECT C.lunch_end_time FROM [dbo].[tb_company] C WITH(NOLOCK) WHERE C.company_no = @company_no))
					,0, 0, 0, 'schedule'
					, (SELECT TOP 1 C.temp_use_count FROM [dbo].[tb_company] C WITH(NOLOCK) WHERE C.company_no = @company_no)
					FROM [dbo].[tb_schedule] S WITH(NOLOCK)
					WHERE S.user_no = @user_no
					AND S.work_date = @target_date						
				END	
				-- Step 6-1 : 교대근무제 확인
				ELSE IF EXISTS(
					SELECT *
					FROM [dbo].[tb_shift_work] SW WITH(NOLOCK)
					WHERE SW.user_no = @user_no
					AND SW.work_date = @target_date
				)
				BEGIN
					-- Step 6-2 :  교대근무제 적용
					INSERT INTO [dbo].[tb_work_time_offline] WITH(ROWLOCK)
					(user_no, computer_no, work_date, start_time, end_time, rest_start_time, rest_end_time, work_time, over_time, empty_time, work_type, shift_overnight_workYN, temp_use_count)	
					SELECT TOP 1 @user_no, @computer_no, @target_date, SW.work_start_time, SW.work_end_time, SW.rest_start_time, SW.rest_end_time ,0, 0, 0, 'shift', SW.overnight_work_YN
					, (SELECT TOP 1 C.temp_use_count FROM [dbo].[tb_company] C WITH(NOLOCK) WHERE C.company_no = @company_no)
					FROM [dbo].[tb_shift_work] SW WITH(NOLOCK)
					WHERE SW.user_no = @user_no
					AND SW.work_date = @target_date
					ORDER BY SW.createdTime DESC
				END
				ELSE
				BEGIN
					-- Step 7 : 표준근로 설정
					IF(@weekday = 1)
					BEGIN
						INSERT INTO [dbo].[tb_work_time_offline] WITH(ROWLOCK)
						(user_no, computer_no, work_date, start_time, end_time, work_time, over_time, empty_time, temp_use_count)	
						SELECT @user_no, @computer_no, @target_date
						, CASE WHEN C.sun_work_YN = 'Y' THEN C.work_start_time ELSE '00:00:00' END AS work_start_time
						, CASE WHEN C.sun_work_YN = 'Y' THEN C.work_end_time ELSE '00:00:00' END AS work_end_time			
						, 0, 0, 0
						, (SELECT C.temp_use_count FROM [dbo].[tb_company] C WITH(NOLOCK) WHERE C.company_no = U.company_no)
						FROM [dbo].[tb_user] U WITH(NOLOCK)
						INNER JOIN [dbo].[tb_company] C WITH(NOLOCK)
						ON U.company_no = C.company_no
						WHERE user_no = @user_no
						AND U.retireYN = 'N'
					END
					ELSE IF(@weekday = 2)
					BEGIN
						INSERT INTO [dbo].[tb_work_time_offline] WITH(ROWLOCK)
						(user_no, computer_no, work_date, start_time, end_time, work_time, over_time, empty_time, temp_use_count)	
						SELECT @user_no, @computer_no, @target_date
						, CASE WHEN C.mon_work_YN = 'Y' THEN C.work_start_time ELSE '00:00:00' END AS work_start_time
						, CASE WHEN C.mon_work_YN = 'Y' THEN C.work_end_time ELSE '00:00:00' END AS work_end_time			
						, 0, 0, 0
						, (SELECT C.temp_use_count FROM [dbo].[tb_company] C WITH(NOLOCK) WHERE C.company_no = U.company_no)
						FROM [dbo].[tb_user] U WITH(NOLOCK)
						INNER JOIN [dbo].[tb_company] C WITH(NOLOCK)
						ON U.company_no = C.company_no
						WHERE user_no = @user_no
						AND U.retireYN = 'N'
					END
					ELSE IF(@weekday = 3)
					BEGIN
						INSERT INTO [dbo].[tb_work_time_offline] WITH(ROWLOCK)
						(user_no, computer_no, work_date, start_time, end_time, work_time, over_time, empty_time, temp_use_count)		
						SELECT @user_no, @computer_no, @target_date
						, CASE WHEN C.tue_work_YN = 'Y' THEN C.work_start_time ELSE '00:00:00' END AS work_start_time
						, CASE WHEN C.tue_work_YN = 'Y' THEN C.work_end_time ELSE '00:00:00' END AS work_end_time			
						, 0, 0, 0
						, (SELECT C.temp_use_count FROM [dbo].[tb_company] C WITH(NOLOCK) WHERE C.company_no = U.company_no)
						FROM [dbo].[tb_user] U WITH(NOLOCK)
						INNER JOIN [dbo].[tb_company] C WITH(NOLOCK)
						ON U.company_no = C.company_no
						WHERE user_no = @user_no
						AND U.retireYN = 'N'
					END
					ELSE IF(@weekday = 4)
					BEGIN
						INSERT INTO [dbo].[tb_work_time_offline] WITH(ROWLOCK)
						(user_no, computer_no, work_date, start_time, end_time, work_time, over_time, empty_time, temp_use_count)	
						SELECT @user_no, @computer_no, @target_date
						, CASE WHEN C.wed_work_YN = 'Y' THEN C.work_start_time ELSE '00:00:00' END AS work_start_time
						, CASE WHEN C.wed_work_YN = 'Y' THEN C.work_end_time ELSE '00:00:00' END AS work_end_time			
						, 0, 0, 0
						, (SELECT C.temp_use_count FROM [dbo].[tb_company] C WITH(NOLOCK) WHERE C.company_no = U.company_no)
						FROM [dbo].[tb_user] U WITH(NOLOCK)
						INNER JOIN [dbo].[tb_company] C WITH(NOLOCK)
						ON U.company_no = C.company_no
						WHERE user_no = @user_no
						AND U.retireYN = 'N'
					END
					ELSE IF(@weekday = 5)
					BEGIN
						INSERT INTO [dbo].[tb_work_time_offline] WITH(ROWLOCK)
						(user_no, computer_no, work_date, start_time, end_time, work_time, over_time, empty_time, temp_use_count)	
						SELECT @user_no, @computer_no, @target_date
						, CASE WHEN C.thu_work_YN = 'Y' THEN C.work_start_time ELSE '00:00:00' END AS work_start_time
						, CASE WHEN C.thu_work_YN = 'Y' THEN C.work_end_time ELSE '00:00:00' END AS work_end_time			
						, 0, 0, 0
						, (SELECT C.temp_use_count FROM [dbo].[tb_company] C WITH(NOLOCK) WHERE C.company_no = U.company_no)
						FROM [dbo].[tb_user] U WITH(NOLOCK)
						INNER JOIN [dbo].[tb_company] C WITH(NOLOCK)
						ON U.company_no = C.company_no
						WHERE user_no = @user_no
						AND U.retireYN = 'N'
					END
					ELSE IF(@weekday = 6)
					BEGIN
						INSERT INTO [dbo].[tb_work_time_offline] WITH(ROWLOCK)
						(user_no, computer_no, work_date, start_time, end_time, work_time, over_time, empty_time, temp_use_count)	
						SELECT @user_no, @computer_no, @target_date
						, CASE WHEN C.fri_work_YN = 'Y' THEN C.work_start_time ELSE '00:00:00' END AS work_start_time
						, CASE WHEN C.fri_work_YN = 'Y' THEN C.work_end_time ELSE '00:00:00' END AS work_end_time			
						, 0, 0, 0
						, (SELECT C.temp_use_count FROM [dbo].[tb_company] C WITH(NOLOCK) WHERE C.company_no = U.company_no)
						FROM [dbo].[tb_user] U WITH(NOLOCK)
						INNER JOIN [dbo].[tb_company] C WITH(NOLOCK)
						ON U.company_no = C.company_no
						WHERE user_no = @user_no
						AND U.retireYN = 'N'
					END
					ELSE IF(@weekday = 7)
					BEGIN
						INSERT INTO [dbo].[tb_work_time_offline] WITH(ROWLOCK)
						(user_no, computer_no, work_date, start_time, end_time, work_time, over_time, empty_time, temp_use_count)	
						SELECT @user_no, @computer_no, @target_date
						, CASE WHEN C.sat_work_YN = 'Y' THEN C.work_start_time ELSE '00:00:00' END AS work_start_time
						, CASE WHEN C.sat_work_YN = 'Y' THEN C.work_end_time ELSE '00:00:00' END AS work_end_time			
						, 0, 0, 0
						, (SELECT C.temp_use_count FROM [dbo].[tb_company] C WITH(NOLOCK) WHERE C.company_no = U.company_no)
						FROM [dbo].[tb_user] U WITH(NOLOCK)
						INNER JOIN [dbo].[tb_company] C WITH(NOLOCK)
						ON U.company_no = C.company_no
						WHERE user_no = @user_no
						AND U.retireYN = 'N'
					END
				END
				END

			SET @count = @count+1
			END

			--SELECT * FROM [dbo].[tb_work_time_offline] WTO WITH(NOLOCK) WHERE WTO.user_no = @user_no AND WTO.computer_no = @computer_no
	END	
END


